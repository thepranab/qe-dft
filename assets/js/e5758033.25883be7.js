(self.webpackChunkespresso=self.webpackChunkespresso||[]).push([[512],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=l(t),f=o,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||a;return t?r.createElement(d,i(i({ref:n},u),{},{components:t})):r.createElement(d,i({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7205:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var r=t(2122),o=t(9756),a=(t(7294),t(3905)),i=["components"],c={title:"Structure optimization"},s=void 0,l={unversionedId:"hands-on/structure-optimization",id:"hands-on/structure-optimization",isDocsHomePage:!1,title:"Structure optimization",description:"There are two types of structural optimization calculations in Quantum espresso:",source:"@site/docs/hands-on/structure-optimization.md",sourceDirName:"hands-on",slug:"/hands-on/structure-optimization",permalink:"/espresso/hands-on/structure-optimization",editUrl:"https://github.com/pranabdas/espresso/blob/master/docs/hands-on/structure-optimization.md",version:"current",frontMatter:{title:"Structure optimization"},sidebar:"docs",previous:{title:"Convergence testing",permalink:"/espresso/hands-on/convergence"},next:{title:"DOS calculation",permalink:"/espresso/hands-on/dos"}},u=[],p={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are two types of structural optimization calculations in Quantum espresso:\n(1) ",(0,a.kt)("strong",{parentName:"p"},"relax"),": where only the atomic positions are allowed to vary, and (2)\n",(0,a.kt)("strong",{parentName:"p"},"vc-relax"),": which allows to vary both the atomic positions and lattice\nconstants."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="si_relax.in"',title:'"si_relax.in"'},"&control\n    calculation = 'vc-relax'\n    prefix = 'silicon'\n    outdir = './tmp/'\n    pseudo_dir = './pseudos/'\n    etot_conv_thr = 1e-5\n    forc_conv_thr = 1e-4\n/\n\n&system\n    ibrav=2, celldm(1) =14,\n    nat=2, ntyp=1,\n    ecutwfc=30\n/\n\n&electrons\n    conv_thr=1e-7\n    mixing_beta = 0.6\n/\n\n&ions\n/\n\n&cell\n    cell_dofree='ibrav'\n/\n\nATOMIC_SPECIES\n  Si  28.0855  Si.pz-vbc.UPF\n\nATOMIC_POSITIONS (alat)\n  Si 0.00 0.00 0.00 0 0 0\n  Si 0.25 0.25 0.25 0 0 0\n\nK_POINTS (automatic)\n  6 6 6 1 1 1\n")),(0,a.kt)("p",null,"Perform the plane wave calculation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x -inp si_relax.in > si_relax.out\n")),(0,a.kt)("p",null,"This produces following output (see the ",(0,a.kt)("inlineCode",{parentName:"p"},"si_relax.out"),' for more details, look\nfor "Final enthalpy"):'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"     Final enthalpy =     -15.8536258868 Ry\nBegin final coordinates\n     new unit-cell volume =    265.89380 a.u.^3 (    39.40140 Ang^3 )\n     density =      2.36728 g/cm^3\n\nCELL_PARAMETERS (alat= 14.00000000)\n  -0.364556379   0.000000000   0.364556379\n   0.000000000   0.364556379   0.364556379\n  -0.364556379   0.364556379   0.000000000\n\nATOMIC_POSITIONS (alat)\nSi            0.0000000000        0.0000000000        0.0000000000    0   0   0\nSi            0.1822781896        0.1822781896        0.1822781896    0   0   0\nEnd final coordinates\n")),(0,a.kt)("p",null,"Lattice constant = 0.364556379 * 14 / 0.5 = 10.2076 Bohr."))}m.isMDXComponent=!0}}]);