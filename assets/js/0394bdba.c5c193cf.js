(self.webpackChunkespresso=self.webpackChunkespresso||[]).push([[260],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1691:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),l=["components"],i={title:"Quantum Espresso installation",sidebar_label:"Installation"},s=void 0,p={unversionedId:"setup/install",id:"setup/install",isDocsHomePage:!1,title:"Quantum Espresso installation",description:"We can install Quantum Espresso in our personal laptops or desktops to run",source:"@site/docs/setup/install.md",sourceDirName:"setup",slug:"/setup/install",permalink:"/espresso/setup/install",editUrl:"https://github.com/pranabdas/espresso/blob/master/docs/setup/install.md",version:"current",frontMatter:{title:"Quantum Espresso installation",sidebar_label:"Installation"},sidebar:"docs",previous:{title:"DFT overview",permalink:"/espresso/theory/dft"},next:{title:"HPC",permalink:"/espresso/setup/hpc"}},u=[{value:"Installing PWTK",id:"installing-pwtk",children:[]}],c={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We can install Quantum Espresso in our personal laptops or desktops to run\nrelatively less computationally intensive calculations. If we intend to perform\ncomputationally heavy tasks, we would need access to better computing resources\nwith large number of CPU (or GPU) cores, memory, bandwidth, and disc IO."),(0,o.kt)("p",null,"Throughout this tutorial, I will be using a Ubuntu system for smaller\ncalculations while other computationally intensive calculations will be done in\nHPC clusters."),(0,o.kt)("p",null,"Perhaps the most easiest way to install Quantum Espresso is from the package\nmanager of respective Linux distribution. This should work fine for us and this\nis recommended option. If you are on Ubuntu/ Debian:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install --no-install-recommends \\\n    libfftw3-dev \\\n    quantum-espresso\n")),(0,o.kt)("p",null,"If you want to compile from the source yourself, here are the installation steps\nfor latest version of Quantum Espresso (6.7) in a Ubuntu (LTS 20.04) machine. I\nwill be compiling for single processor. First install the libraries and\ndependencies:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    libblas3 \\\n    libc6 \\\n    libfftw3-dev \\\n    libgcc-s1 \\\n    gfortran \\\n    liblapack-dev \\\n    wget\n")),(0,o.kt)("p",null,"If you want to compile for parallel processing, you need to also install:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install --no-install-recommends \\\n    libopenmpi-dev \\\n    libscalapack-openmpi-dev \\\n    libelpa4\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/QEF/q-e/releases"},"Download")," Quantum Espresso (latest version\n6.7 at the time of writing):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/QEF/q-e/releases/download/qe-6.7.0/qe-6.7-ReleasePack.tgz\n")),(0,o.kt)("p",null,"Un-tar the source files in your directory of choice:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tar -zxvf qe-6.7-ReleasePack.tgz\n# delete the archive\nrm qe-6.7-ReleasePack.tgz\n")),(0,o.kt)("p",null,"Go to the qe directory and issue configure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd qe-6.7\n./configure\n")),(0,o.kt)("p",null,"Here we can provide various configuration options. Read the manual in oder to\nproperly understand. But in most cases we will be just fine with the defaults,\nit should detect the system configuration automatically, in case you don't get\nwhat you want, try the various configuration ",(0,o.kt)("inlineCode",{parentName:"p"},"flags")," with configure."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Note that certain programs/utilities bundled with Quantum Espresso might not\nwork correctly in parallel compilation, so we may need serial compilation for\nthem by ",(0,o.kt)("inlineCode",{parentName:"p"},"./configure --disable-parallel")," option if parallel option is\nautomatically detected."))),(0,o.kt)("p",null,"Finally, compile the source files and create the binary executables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# compile individual packages\nmake pw\n# or compile everything\nmake all\n# we can parallelize e.g., below command uses 2 CPUs\nmake -j 2 all\n")),(0,o.kt)("p",null,"Now, the binary files or their symbolic links (shortcuts) would be placed in the\n",(0,o.kt)("inlineCode",{parentName:"p"},"bin")," directory. It would be good idea to include the executable path to your\n",(0,o.kt)("inlineCode",{parentName:"p"},".bashrc")," (or ",(0,o.kt)("inlineCode",{parentName:"p"},".zshrc")," or whatever shell you use) file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# use the correct path if it differs from mine\necho 'export PATH=\"/root/qe-6.7/bin:$PATH\"' >> ~/.bashrc\n")),(0,o.kt)("p",null,"Finally, you may need to restart your terminal or ",(0,o.kt)("inlineCode",{parentName:"p"},"source .bashrc"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"source ~/.bashrc\n")),(0,o.kt)("p",null,"We are now ready to run Quantum Espresso ",(0,o.kt)("inlineCode",{parentName:"p"},"pw.x")," (or any other program) using\n",(0,o.kt)("inlineCode",{parentName:"p"},"mpirun")," by following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x -inp inputfile > outputfile\n# For parallel version\nmpirun -np 12 pw.x -inp inputfile > outputfile\n")),(0,o.kt)("p",null,"Where ",(0,o.kt)("inlineCode",{parentName:"p"},"-np 12")," specifies the number of processors. ",(0,o.kt)("inlineCode",{parentName:"p"},"-inp")," stands for input file.\nAlternatively, we can use ",(0,o.kt)("inlineCode",{parentName:"p"},"-i"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"-in"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"-input"),", or even standard input\nredirect ",(0,o.kt)("inlineCode",{parentName:"p"},"<"),". But beware some systems may not interpret all the different\noptions, I think safe option is to use ",(0,o.kt)("inlineCode",{parentName:"p"},"-i"),"."),(0,o.kt)("p",null,"Once installation is completed, optionally we can run tests if everything went\nOK. Go to the ",(0,o.kt)("inlineCode",{parentName:"p"},"test-suite")," directory and run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make run-tests\n")),(0,o.kt)("p",null,"If all is well, we will see ",(0,o.kt)("strong",{parentName:"p"},"Passed")," messages and we are good to go."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Note that the above installation steps may not be the most optimal way to run\nQuantum Espresso in your computer. There are multiple implementations of same\nlibrary. For example, you can replace openmpi libraries with Intel MKL or MPICH\nimplementations. Please do research yourself or ask help from someone who has\nknowledge about high performance computing."))),(0,o.kt)("h2",{id:"installing-pwtk"},"Installing PWTK"),(0,o.kt)("p",null,"We will install a very hand scripting package PWscf Toolkit (PWTK). First we\nneed to install following dependencies:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install tcl tcllib\n")),(0,o.kt)("p",null,"Download the file from - ",(0,o.kt)("a",{parentName:"p",href:"http://pwtk.ijs.si/download/pwtk-2.0.tar.gz"},"http://pwtk.ijs.si/download/pwtk-2.0.tar.gz")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'wget "http://pwtk.ijs.si/download/pwtk-2.0.tar.gz"\n')),(0,o.kt)("p",null,"Above command will download and save the file to your current directory. Next we\nneed to just un-tar (no need to compile):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tar zxvf pwtk-2.0.tar.gz\n")),(0,o.kt)("p",null,"Add the path (modify below as appropriate) to ",(0,o.kt)("inlineCode",{parentName:"p"},".bashrc"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"echo 'export PATH=\"/root/pwtk-2.0:$PATH\"' >> ~/.bashrc\nsource ~/.bashrc\n")))}m.isMDXComponent=!0}}]);