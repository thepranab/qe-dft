(self.webpackChunkespresso=self.webpackChunkespresso||[]).push([[305],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),f=o,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6307:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a=["components"],s={title:"Density Functional Theory using Quantum Espresso",sidebar_label:"Welcome",slug:"/"},l=void 0,c={unversionedId:"welcome",id:"welcome",isDocsHomePage:!1,title:"Density Functional Theory using Quantum Espresso",description:"This tutorial is result of my personal notes while trying (which I still do) to",source:"@site/docs/welcome.md",sourceDirName:".",slug:"/",permalink:"/espresso/",editUrl:"https://github.com/pranabdas/espresso/blob/master/docs/welcome.md",version:"current",frontMatter:{title:"Density Functional Theory using Quantum Espresso",sidebar_label:"Welcome",slug:"/"},sidebar:"docs",next:{title:"Problem statement",permalink:"/espresso/theory/problem-statement"}},u=[{value:"Filename conventions",id:"filename-conventions",children:[]},{value:"Unit conversions",id:"unit-conversions",children:[]}],p={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This tutorial is result of my personal notes while trying (which I still do) to\nlearn Density Functional Theory calculations myself. I am no expert in this\nsubject. I am sharing this notes here, just in case it helps you getting\nstarted. I will cite numerous other resources that I am following. Hope you will\nfind this tutorial helpful."),(0,i.kt)("p",null,"The quantum espresso input files, jupyter notebooks (containing python code for\nvisualizations), and other source files related to this tutorial can be found on\nGitHub: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pranabdas/espresso/"},"pranabdas/espresso"),". You may clone\nthe repository to your local machine:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/pranabdas/espresso.git\n")),(0,i.kt)("h2",{id:"filename-conventions"},"Filename conventions"),(0,i.kt)("p",null,"Lately, I decided to follow specific pattern for the filenames, but you can\nchoose whatever works best for you. Note that all example files in this\ntutorial does not follow this convention yet."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{program}.{calculation}.{system}.{in, out}\n{program}.{calculation}.{system_description}.{in, out}\n{pw, pp, ...}.{scf, bands, ...}.{silicon, al_slab}.{in, out}\n")),(0,i.kt)("p",null,"Example: ",(0,i.kt)("em",{parentName:"p"},"pw.bands.silicon.in")," \u2192 ",(0,i.kt)("em",{parentName:"p"},"input")," file for the ",(0,i.kt)("em",{parentName:"p"},"bands")," calculation using\n",(0,i.kt)("em",{parentName:"p"},"PWscf")," program for ",(0,i.kt)("em",{parentName:"p"},"silicon"),"."),(0,i.kt)("p",null,"For PWTK scripts, we will use ",(0,i.kt)("inlineCode",{parentName:"p"},".pwtk")," extension (e.g., ",(0,i.kt)("em",{parentName:"p"},"silicon_vc_relax.pwtk"),")."),(0,i.kt)("h2",{id:"unit-conversions"},"Unit conversions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1 Bohr = 0.529177249 \xc5"),(0,i.kt)("li",{parentName:"ul"},"1 Rydberg (Ry) = 13.6056981 eV.")))}m.isMDXComponent=!0}}]);